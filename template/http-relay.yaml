apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: http-relay
spec:
  title: 'http-relay'
  url: 'http://www.dest-unreach.org/socat/'
  gitRepo: 'https://github.com/alpine-docker/multi-arch-docker-images/tree/master/socat'
  author: 'ripples'
  description: 'Multipurpose relay for binary protocols'
  readme: 'https://github.com/alpine-docker/multi-arch-docker-images/blob/master/socat/README.md'
  icon: 'https://pkgs.alpinelinux.org/assets/favicon.ico'
  templateType: inline
  categories:
    - tool
  defaults:
    app_host:
      type: string
      value: ${{ random(8) }}
    app_name:
      type: string
      value: "relay-${{ random(8) }}"
  inputs:
    name:
      description: 'name'
      type: string
      default: 'http'
      required: true
    address:
      description: 'target address (ip:port)'
      type: string
      default: ''
      required: true
    proxy_body_size:
      description: 'proxy body size (m)'
      type: number
      default: '32'
      required: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ inputs.name }}-${{ defaults.app_name }}
  annotations:
    originImageName: alpine/socat
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ inputs.name }}-${{ defaults.app_name }}
    app: ${{ inputs.name }}-${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: ${{ inputs.name }}-${{ defaults.app_name }}
  selector:
    matchLabels:
      app: ${{ inputs.name }}-${{ defaults.app_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: ${{ inputs.name }}-${{ defaults.app_name }}
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      containers:
        - name: ${{ inputs.name }}-${{ defaults.app_name }}
          image: alpine/socat
          env: []
          resources:
            requests:
              cpu: 10m
              memory: 6Mi
            limits:
              cpu: 100m
              memory: 64Mi
          command:
            - socat
            - TCP-LISTEN:80,reuseaddr,fork
            - TCP:${{ inputs.address }}
          args: []
          ports:
            - containerPort: 80
          imagePullPolicy: IfNotPresent
          volumeMounts: []
      volumes: []
---
apiVersion: v1
kind: Service
metadata:
  name: ${{ inputs.name }}-${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ inputs.name }}-${{ defaults.app_name }}
spec:
  ports:
    - port: 80
  selector:
    app: ${{ inputs.name }}-${{ defaults.app_name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ inputs.name }}-${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ inputs.name }}-${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: ${{ inputs.proxy_body_size }}m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ inputs.name }}-${{ defaults.app_name }}
                port:
                  number: 80
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}
